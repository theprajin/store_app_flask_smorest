"""super and admin added in Role model

Revision ID: df88e4109863
Revises: a4806c5f2964
Create Date: 2024-03-28 14:05:06.584106

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'df88e4109863'
down_revision = 'a4806c5f2964'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role_permission', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'roles', ['role_id'], ['id'])

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_super', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_admin', sa.Boolean(), nullable=True))
        batch_op.alter_column('name',
               existing_type=postgresql.ENUM('SUPERADMIN', 'ADMIN', 'USER', name='roleenum'),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.drop_constraint('roles_name_key', type_='unique')

    with op.batch_alter_table('user_role', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'roles', ['role_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_role', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_unique_constraint('roles_name_key', ['name'])
        batch_op.alter_column('name',
               existing_type=sa.String(length=255),
               type_=postgresql.ENUM('SUPERADMIN', 'ADMIN', 'USER', name='roleenum'),
               nullable=False)
        batch_op.drop_column('is_admin')
        batch_op.drop_column('is_super')

    with op.batch_alter_table('role_permission', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    # ### end Alembic commands ###
